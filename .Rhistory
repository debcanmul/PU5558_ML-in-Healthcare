knitr::opts_chunk$set(echo = TRUE)
fev_data[is_tall,]
knitr::opts_chunk$set(echo = TRUE)
2^5
3/10
(3+5)^2
sqrt(4)
x <- 3  # Check the "Environment" window!
y <- 6
x+y
library(tidyverse)
find("filter") # this shows you the packages a function belongs to, in order of priority
sqrt(4) # base R
4 %>%
sqrt  # "pipe" operator (you can read is as "and then...")
?sqrt
fev_data <- read_csv("fev.csv")
head(fev_data)
summary(fev_data)
head(fev_data$fev)
summary(fev_data$fev)
length(fev_data$fev)
names(fev_data)
dim(fev_data)
max(fev_data$fev)
mean(fev_data$fev)
sd(fev_data$fev)
fev_data$fev[32] # 32nd element of the fev column
fev_data[32,3] # 32nd element of the 3rd column
fev_data[32,"age"]  # Same thing, but using the name of the 3rd column - better, as it is more readable and robust
fev_data[32, ] # Everything in the 3rd row
fev_data[32,1:3]
fev_data[32,-5]
fev_data[32,-1:-2]
fev_data[32,c(1,3,5)] #c(1,3,5) is a vector of numbers (c means "combine")
c(1,3,5) %>%
length
# Add your code here!
is_tall <- fev_data$height > 72
table(is_tall)
fev_data[is_tall,]
fev_data %>%
filter(height > 72)
fev_data %>%
filter(age == 6)
fev_data %>%
filter(age != 20)
fev_data %>%
filter(age <= 20)
fev_data %>%
filter(is.na(age))  # opposite: !is.na(age)
fev_data %>%
filter(age == 14 & smoke !=0)   # age is 14 AND smoker
fev_data %>%
filter(age < 5 | height < 50)  # younger than 5 OR shorter than 50 cm
fev_data %>%
select(fev, height, age)
fev_data %>%
select(-seqnbr, -subjid)
fev_data %>%
filter(age == 14 & smoke != 0) %>%
summarise(mean(fev))
fev_data %>%
filter(age == 14 & smoke != 0) %>%
summarise(my_mean = mean(fev))
fev_data %>%
filter(age == 14 & smoke != 0) %>%
summarise(mean(fev), sd(fev))
fev_data %>%
group_by(smoke)
fev_data %>%
group_by(smoke) %>%
summarise(mean(fev), sd(fev))
fev_data %>%
group_by(smoke) %>%
summarise(n = n(), mean = mean(fev), sd = sd(fev))
fev_data %>%
group_by(height < 60) %>%
summarise(n(), mean(fev))
fev_data %>%
group_by(age) %>%
summarise(n(), mean(fev)) %>%
arrange(age) # arrange by increasing age
fev_data %>%
group_by(age) %>%
summarise(n(), mean(fev)) %>%
arrange(desc(age)) # arrange by decreasing age
fev_data$age %>% sort #Sort a column
fev_data$age %>% unique %>% sort # Sort unique values in a column
table(fev_data$age)
table(fev_data$age,fev_data$smoke)
# Add your code here!
# Add your code here!
fev_data %>%
rename(ID = subjid)
fev_data %>%
mutate(heightdiff = height - mean(height))
new_fev_data <- fev_data %>%
rename(id = subjid) %>%
mutate(heightdiff = height - mean(height))
fev_data %>%
ggplot(aes(x = age, y = fev))   # aes stands for "aesthetic"
fev_data %>%
ggplot(aes(x = age, y = fev)) +
geom_point()
fev_data %>%
ggplot(aes(x = age, y = fev)) +
geom_point() +
ylim(0, 7) +
ylab("Forced exhalation\nvolume (litres)") +
ggtitle("Distribution of FEV")
fev_data %>%
ggplot(aes(x = age, y = fev)) +
geom_point(size = 0.5, shape = 18, colour = "blue")  # Shape 18 is filled diamond
fev_data %>%
mutate(sex = as.character(sex)) %>% # change sex from continuous to categorical variable
ggplot(aes(x = age, y = fev)) +
geom_point(aes(colour = sex))
fev_data %>%
mutate(sex = as.character(sex)) %>%
ggplot(aes(x = age, y = fev)) +
geom_point(aes(colour = sex)) +
geom_smooth()
fev_data %>%
mutate(sex = as.character(sex)) %>%
ggplot(aes(x = age, y = fev)) +
geom_point(aes(colour = sex)) +
geom_smooth(aes(colour=sex))
fev_average <- fev_data %>%
group_by(age, smoke) %>%
summarise(fev_mean = mean(fev))
fev_average %>%
ggplot(aes(x = age, y = fev_mean)) +
geom_line(aes(colour = smoke))  # smoke is a continuous numeric variable!
fev_average %>%
mutate(smoke = as.character(smoke)) %>%
ggplot(aes(x = age, y = fev_mean)) +
geom_line(aes(colour = smoke))
fev_data %>%
mutate(smoke = as.character(smoke)) %>%
ggplot(aes(x = smoke)) +
geom_bar()  # by default, the y variable is the count of the x (in this case, number of smokers)
fev_count <- fev_data %>%
group_by(sex, smoke) %>%
summarise(smoke_count = n())
fev_count <- fev_data %>%
mutate(Smoke = ifelse(smoke == 1, "Smoker", "Non-smoker"),
Sex = ifelse(sex == 1, "Male", "Female")) %>%
group_by(Sex, Smoke) %>%
summarise(Count = n())
fev_count %>%
ggplot(aes(x = Smoke, y = Count, fill = Sex)) +
geom_bar(stat = "identity",     # "identity" allows us to specify a y variable, otherwise it is count (as above)
position = "dodge") +  # Put bars side-by-side instead of stacked
scale_fill_brewer(palette="Spectral")
fev_data %>%
filter(age < 18 & age > 9) %>%
mutate(smoke = as.character(smoke),
age = as.character(age)) %>%
ggplot(aes(x = age, y = fev, colour = smoke)) +
geom_boxplot() +
theme_bw()
knitr::opts_chunk$set(echo = TRUE)
fev_data %>%
group_by(sex) %>%
summarise(mean(height), sd(height))
table(fev_data$age)
fev_data %>%
filter(age>15) %>%
group_by(sex) %>%
summarise(mean(height), sd(height))
fev_data %>%
group_by(age,sex) %>%
summarise(n(),mean(height), sd(height)) %>%
arrange(desc(age)) %>%
print(n=40)
fev_data %>%
group_by(smoke) %>%
summarise(mean(fev))
fev_data %>%
group_by(age,smoke) %>%
summarise(n = n(), mean = mean(fev), sd = sd(fev)) %>%
filter(n>5) %>%  # here I am only including rows where we have at least five people - to remove low counts
arrange(desc(age))
